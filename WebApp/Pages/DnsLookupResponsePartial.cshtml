@model GadgetResponse<DnsLookupGadget.Result>
@if (Model != null)
{
    <div class="card mt-3">
        <h5 class="card-header">
            Response from <code>@Model.MachineName</code>
            <small class="text-muted float-right">@Model.TimeStarted.ToDisplayString()</small>
        </h5>
        @if (!string.IsNullOrWhiteSpace(Model.Error))
        {
            <div class="card-body text-white bg-warning">
                <pre>@Model.Error</pre>
            </div>
        }
        @if (Model.Result != null)
        {
            <div class="card-body">
                <h6 class="card-subtitle mb-2 text-muted">Host Name</h6>
                <div>@Model.Result.HostName</div>
                @if (Model.Result.Addresses != null && Model.Result.Addresses.Any())
                {
                    <h6 class="card-subtitle mb-2 text-muted mt-3">IP Addresses</h6>
                    <ul>
                        @foreach (var address in Model.Result.Addresses)
                        {
                            <li>@address</li>
                        }
                    </ul>
                }
                @if (Model.Result.Aliases != null && Model.Result.Aliases.Any())
                {
                    <h6 class="card-subtitle mb-2 text-muted mt-3">Aliases</h6>
                    <ul>
                        @foreach (var alias in Model.Result.Aliases)
                        {
                            <li>@alias</li>
                        }
                    </ul>
                }
            </div>
        }
    </div>

    <partial name="DnsLookupResponsePartial" model="Model.ChainedResponse" />
}