@page
@model SqlConnectionModel
@{
    ViewData["Title"] = "SQL Connection";
}
<h1>@ViewData["Title"]</h1>

<form method="POST">
    <p class="text-muted">Allows you to perform a (scalar) query on a SQL Connection from the web server and render the results below.</p>
    <div class="form-group">
        <label for="databaseType">Database Type</label>
        <select class="form-control val-required" name="databaseType" id="databaseType" title="You can set the default value as a 'DefaultSqlConnectionDatabaseType' configuration setting" onchange="updateUI()">
            <option value="@SqlConnectionDatabaseType.SqlServer" selected="@(Model.GadgetRequest.DatabaseType == @SqlConnectionDatabaseType.SqlServer ? true : false)">SQL Server, Azure SQL Database, ...</option>
            <option value="@SqlConnectionDatabaseType.PostgreSql" selected="@(Model.GadgetRequest.DatabaseType == @SqlConnectionDatabaseType.PostgreSql ? true : false)">PostgreSQL</option>
            <option value="@SqlConnectionDatabaseType.MySql" selected="@(Model.GadgetRequest.DatabaseType == @SqlConnectionDatabaseType.MySql ? true : false)">MySQL, MariaDB, ...</option>
            <option value="@SqlConnectionDatabaseType.CosmosDB" selected="@(Model.GadgetRequest.DatabaseType == @SqlConnectionDatabaseType.CosmosDB ? true : false)">Azure Cosmos DB (SQL API)</option>
        </select>
    </div>
    <div class="form-group">
        <label for="sqlConnectionString">SQL Connection String</label>
        <input type="password" name="sqlConnectionString" id="sqlConnectionString" value="@Model.GadgetRequest.SqlConnectionString" class="form-control val-required" autocomplete="off" placeholder="The (masked) connection string with which to connect to the SQL database" title="You can set the default value as a 'DefaultSqlConnectionSqlConnectionString' configuration setting" />
        <input type="text" name="sqlConnectionStringSuffix" id="sqlConnectionStringSuffix" value="@Model.GadgetRequest.SqlConnectionStringSuffix" class="form-control val-optional" placeholder="An optional (unmasked) connection string suffix which is appended to the connection string" title="You can set the default value as a 'DefaultSqlConnectionSqlConnectionStringSuffix' configuration setting" />
        <small id="cosmosDBConnectionStringInfoPanel" class="form-text text-muted">
            Optionally, add a <code>Database</code> and <code>Container</code> connection string property to go deeper than the account level, e.g. <code>&quot;AccountEndpoint=...;AccountKey=...;Database=SampleDB;Container=Persons;&quot;</code>.
        </small>
    </div>
    <div class="form-group">
        <label for="sqlQuery">SQL Query</label>
        <input type="text" name="sqlQuery" id="sqlQuery" value="@Model.GadgetRequest.SqlQuery" class="form-control val-required" placeholder="The scalar SQL query to execute against the database" title="You can set the default value as a 'DefaultSqlConnectionSqlQuery' configuration setting" />
    </div>
    <div id="azureManagedIdentityPanel">
        <div class="form-group form-check">
            <input type="checkbox" name="useAzureManagedIdentity" id="useAzureManagedIdentity" value="true" checked="@Model.GadgetRequest.UseAzureManagedIdentity" class="form-check-input" title="You can set the default value as a 'DefaultSqlConnectionUseAzureManagedIdentity' configuration setting" />
            <label class="form-check-label" for="useAzureManagedIdentity">Use Azure Managed Identity to connect to Azure SQL Database</label>
        </div>
        <div class="form-group">
            <label for="azureManagedIdentityClientId">User-Assigned Managed Identity Client ID</label>
            <input type="text" name="azureManagedIdentityClientId" id="azureManagedIdentityClientId" value="@Model.GadgetRequest.AzureManagedIdentityClientId" class="form-control val-optional" placeholder="The Client ID of a User-Assigned Managed Identity; leave blank to use the System-Assigned Managed Identity" title="You can set the default value as a 'DefaultSqlConnectionAzureManagedIdentityClientId' configuration setting" />
        </div>
    </div>
    <div class="form-group">
        <label for="callChainUrls"><a asp-page="/Api" asp-fragment="call-chaining">Call Chain</a></label>
        <input type="text" name="callChainUrls" id="callChainUrls" value="@Model.GadgetRequest.CallChainUrls" class="form-control val-optional" placeholder="Optionally chain calls across multiple hops (separate base URL's by spaces)" title="You can set the default value as a 'DefaultCallChainUrls' configuration setting" />
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>
</form>

@Html.DisplayFor(m => m.GadgetResponse)

<script>
function updateUI() {
    var databaseType = document.getElementById('databaseType').value;
    var sqlQuery = document.getElementById('sqlQuery').value;

    // Show the Azure Managed Identity panel if supported.
    if (databaseType == '@SqlConnectionDatabaseType.SqlServer') {
        document.getElementById('azureManagedIdentityPanel').style.display = 'block';
    } else {
        document.getElementById('azureManagedIdentityPanel').style.display = 'none';
    }

    // Show the Cosmos DB connection string info panel if appropriate.
    if (databaseType == '@SqlConnectionDatabaseType.CosmosDB') {
        document.getElementById('cosmosDBConnectionStringInfoPanel').style.display = 'block';
    } else {
        document.getElementById('cosmosDBConnectionStringInfoPanel').style.display = 'none';
    }

    // Set the default query depending on the database type.
    const SqlServerDefaultQuery = 'SELECT \'User "\' + USER_NAME() + \'" logged in from IP address "\' + CAST(CONNECTIONPROPERTY(\'client_net_address\') AS NVARCHAR) + \'" to database "\' + DB_NAME() + \'" on server "\' + @@@@SERVERNAME + \'"\'';
    const PostgreSqlDefaultQuery = 'SELECT CONCAT(\'User "\', CURRENT_USER, \'" logged in from IP address "\', INET_CLIENT_ADDR(), \'" to database "\', CURRENT_DATABASE(), \'"\')';
    const MySqlDefaultQuery = 'SELECT CONCAT_WS(\'\', \'User "\', USER(), \'" logged in to database "\', DATABASE(), \'"\')';
    const CosmosDBDefaultQuery = 'SELECT GetCurrentDateTime() AS currentUtcDateTime';
    
    if (sqlQuery == '' || sqlQuery == SqlServerDefaultQuery || sqlQuery == PostgreSqlDefaultQuery || sqlQuery == MySqlDefaultQuery || sqlQuery == CosmosDBDefaultQuery) {
        if (databaseType == '@SqlConnectionDatabaseType.SqlServer') {
            document.getElementById('sqlQuery').value = SqlServerDefaultQuery;
        } else if (databaseType == '@SqlConnectionDatabaseType.PostgreSql') {
            document.getElementById('sqlQuery').value = PostgreSqlDefaultQuery;
        } else if (databaseType == '@SqlConnectionDatabaseType.MySql') {
            document.getElementById('sqlQuery').value = MySqlDefaultQuery;
        } else if (databaseType == '@SqlConnectionDatabaseType.CosmosDB') {
            document.getElementById('sqlQuery').value = CosmosDBDefaultQuery;
        }
    }
}
updateUI();
</script>